import{b as s,e as l,l as d}from"./chunk-NQ3CSNQC.js";import{N as i,S as u}from"./chunk-JXDQDIJI.js";var m=class a{formBuilder=u(d);createRegisterForm(){return this.formBuilder.group({firstname:["",[s.required,s.minLength(4)]],lastname:["",[s.required,s.minLength(4)]],email:["",[s.required,s.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/)]],passwords:this.formBuilder.group({password:["",[s.required,s.minLength(5),s.pattern(/^[a-zA-Z0-9]+$/)]],repass:["",[s.required]]},{validators:this.passwordMatchValidator})})}createLoginForm(){return this.formBuilder.group({email:["",[s.required,s.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/)]],password:["",[s.required,s.minLength(5),s.pattern(/^[a-zA-Z0-9]+$/)]]})}getControl(r,e){return r.get(e)}getNestedControl(r,e,t){return r.get(e)?.get(t)}passwordMatchValidator(r){let e=r.get("password"),t=r.get("repass");return!e||!t?null:e.value!==t.value?(t.setErrors({passwordMismatch:!0}),{passwordMismatch:!0}):(t.hasError("passwordMismatch")&&t.setErrors(null),null)}isControlInvalid(r,e){let t=this.getControl(r,e);return t?.invalid&&(t?.dirty||t?.touched)||!1}isNestedControlInvalid(r,e,t){let o=this.getNestedControl(r,e,t);return o?.invalid&&(o?.dirty||o?.touched)||!1}getEmailErrorMessage(r){let e=this.getControl(r,"email");return e?.errors?.required?"Email is required!":e?.errors?.pattern?"Email should be a valid email address!":""}getFirstnameErrorMessage(r){let e=this.getControl(r,"firstname");return e?.errors?.required?"First name is required!":e?.errors?.minlength?"First Name should have at least 4 symbols!":""}getLastnameErrorMessage(r){let e=this.getControl(r,"lastname");return e?.errors?.required?"Last name is required!":e?.errors?.minlength?"Last Name should have at least 4 symbols!":""}getPasswordErrorMessage(r,e=!1){let t=e?this.getNestedControl(r,"passwords","password"):this.getControl(r,"password");return t?.errors?.required?"Password is required!":t?.errors?.minlength?"Password should be at least 5 characters!":t?.errors?.pattern?"Password should contain only English letters and digits!":e&&r.get("passwords")?.errors?.passwordMismatch?"Passwords do not match!":""}getRePasswordErrorMessage(r){let e=this.getNestedControl(r,"passwords","repass"),t=r.get("passwords");return e?.errors?.required?"Repeat Password is required!":t?.errors?.passwordMismatch?"Passwords do not match!":""}markFormTouched(r){Object.keys(r.controls).forEach(e=>{let t=r.get(e);t instanceof l?Object.keys(t.controls).forEach(o=>{t.get(o)?.markAsTouched()}):t?.markAsTouched()})}isFormInvalid(r){return r.invalid}getRegisterFormValue(r){let{firstname:e,lastname:t,email:o}=r.value,{password:n,repass:p}=r.value.passwords;return{firstname:e,lastname:t,email:o,password:n,repass:p}}getLoginFormValue(r){let{email:e,password:t}=r.value;return{email:e,password:t}}static \u0275fac=function(e){return new(e||a)};static \u0275prov=i({token:a,factory:a.\u0275fac,providedIn:"root"})};export{m as a};
